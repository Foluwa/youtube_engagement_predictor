services:
  backend:
    build: { context: ., dockerfile: Dockerfile }
    env_file: .env
    ports: ["80:80"]
    volumes: ["./:/app"]
    depends_on:
      - redis

  streamlit:
    build: { context: ., dockerfile: Dockerfile.streamlit }
    env_file: .env
    ports: ["8501:8501"]
    depends_on: ["backend"]
    volumes: ["./:/app"]

  mlflow:
    image: ghcr.io/mlflow/mlflow:v3.1.1
    ports:
      - "5001:5000"
    env_file: .env
    command: >
      mlflow server
      --backend-store-uri sqlite:///mlflow.db
      --default-artifact-root /mlflow/mlruns
      --host 0.0.0.0
    volumes:
      - mlflow-data:/mlflow

  postgres:
    image: postgres:13
    env_file: .env
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-webserver:
    image: apache/airflow:3.0.2  
    command: api-server  
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    env_file: .env
    depends_on: ["postgres", "mlflow"]
    ports: ["8080:8080"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

  airflow-scheduler:
    image: apache/airflow:3.0.2
    command: scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    env_file: .env
    depends_on: ["postgres"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins

  airflow-init:
    image: apache/airflow:3.0.2
    env_file: .env
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    depends_on: ["postgres"]
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: >
      bash -c '
      airflow db migrate &&
      airflow users create
      --username ${AIRFLOW_USER}
      --firstname ${AIRFLOW_FIRST_NAME}
      --lastname ${AIRFLOW_LAST_NAME}
      --role Admin
      --email ${AIRFLOW_USER_EMAIL}
      --password ${AIRFLOW_PASSWORD}
      '
      
  redis:
    image: redis:7
    ports:
      - "6379:6379"

volumes:
  postgres-db-volume:
  mlflow-data: